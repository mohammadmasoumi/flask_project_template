version: '3.9'

services:
  app_server:
    restart: always
    build:
      context: src
      dockerfile: Dockerfile
    container_name: app_server
    image: app_server
    ports:
      - "5000:5000"
    networks:
      - backend
      - frontend
    env_file:
      - deployment/env_dir/flask.env
    command: [ "gunicorn", "--config", "config.py", "--log-level","debug", "--timeout", "180", "app:app" ]
    depends_on:
      - mongo
      - redis
  celery_worker1:
    restart: always
    build:
      context: src
      dockerfile: Dockerfile
    container_name: celery_worker1
    image: celery_worker1
    env_file:
      - deployment/env_dir/flask.env
    network_mode: host
    command: [ "celery", "-A", "tasks.test.celery", "worker","-B", "-Q", "test","--concurrency","1" ]
    depends_on:
      - app_server
      - mongo
      - redis
  celery_beat:
    build:
      context: src
      dockerfile: Dockerfile
    container_name: celery_beat
    image: celery_beat
    command: [ "celery", "-A", "tasks.test.celery", "beat" ]
    env_file:
      - deployment/env_dir/flask.env
    depends_on:
      - app_server
      - mongo
      - redis
  openresty:
    build:
      context: deployment/dockerfile/openresty
      dockerfile: Dockerfile
    container_name: openresty
    image: openresty
    restart: unless-stopped
    networks:
      - backend
      - frontend
    ports:
      - "8080:8080"
    depends_on:
      - mongo
      - redis
    volumes:
      - ./data/nginx:/etc/nginx/conf.d:ro
      - ./data/lua:/home/user/lua:ro
  mongo:
    container_name: mongo
    image: mongo
    restart: always
    env_file:
      - deployment/env_dir/mongo.env
    networks:
      - backend
    dns:
      - 8.8.8.8
      - 4.2.2.4
    ports:
      - "27017:27017"
    volumes:
      - ./data/mongo/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
      - mongo-data:/data/db
  redis:
    container_name: redis
    image: redis
    restart: always
    networks:
      - backend
    dns:
      - 8.8.8.8
      - 4.2.2.4
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  common-data:
    driver: local
    name: common-data
  mongo-data:
    driver: local
    name: mongo-data
  redis-data:
    driver: local
    name: redis-data
